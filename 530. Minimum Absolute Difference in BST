/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int getMinimumDifference(TreeNode root) {
        // the minimum difference will never occur in left child and right child 
        // preorder traverse 
        ArrayList<Integer> result = new ArrayList<>();
        helper(root,result);
        int min = Integer.MAX_VALUE;
        for(int i = 0; i < result.size() - 1; i++){
            min = min > result.get(i+1) - result.get(i) ? result.get(i+1) - result.get(i): min;
            if(min == 0){
                break;
            }
        }
        return min;
    }
    
    void helper(TreeNode root, ArrayList<Integer> result){
        if(root == null){
            return;
        }    
        helper(root.left, result);
        result.add(root.val);
        helper(root.right, result);
    }
}
